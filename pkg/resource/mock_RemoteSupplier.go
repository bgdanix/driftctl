// Code generated by mockery v2.8.0. DO NOT EDIT.

package resource

import mock "github.com/stretchr/testify/mock"

// MockRemoteSupplier is an autogenerated mock type for the RemoteSupplier type
type MockRemoteSupplier struct {
	mock.Mock
}

// EnumerateResources provides a mock function with given fields:
func (_m *MockRemoteSupplier) EnumerateResources() ([]*Resource, error) {
	ret := _m.Called()

	var r0 []*Resource
	if rf, ok := ret.Get(0).(func() []*Resource); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*Resource)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReadResources provides a mock function with given fields: _a0
func (_m *MockRemoteSupplier) ReadResources(_a0 []*Resource) ([]*Resource, error) {
	ret := _m.Called(_a0)

	var r0 []*Resource
	if rf, ok := ret.Get(0).(func([]*Resource) []*Resource); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*Resource)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]*Resource) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Resources provides a mock function with given fields:
func (_m *MockRemoteSupplier) Resources() ([]*Resource, error) {
	ret := _m.Called()

	var r0 []*Resource
	if rf, ok := ret.Get(0).(func() []*Resource); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*Resource)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
